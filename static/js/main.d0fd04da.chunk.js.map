{"version":3,"sources":["components/Header.js","components/Nav.js","components/practice/QuizTestComponent.js","components/practice/PracticeComponents.js","components/charts/HiraganaChart.js","components/charts/KatakanaChart.js","components/charts/ChartComponents.js","components/keyboard/HiraganaKeyboard.js","components/keyboard/KeyboardComponents.js","components/practice/QuizRowsHiragana/QuizRow1.js","components/practice/QuizRowsHiragana/QuizRow2.js","components/practice/QuizRowsHiragana/QuizRow3.js","components/practice/QuizRowsHiragana/QuizRow4.js","components/practice/QuizRowsHiragana/QuizRow5.js","components/practice/QuizRowsHiragana/QuizRow6.js","components/practice/QuizRowsHiragana/QuizRow7.js","components/practice/QuizRowsHiragana/QuizRow8.js","components/practice/QuizRowsHiragana/QuizRow9.js","components/practice/QuizRowsHiragana/QuizRow10.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Nav","to","QuizTestComponent","className","PracticeComponents","HiraganaChart","KatakanaChart","ChartsComponents","HiraganaKeyboard","useState","keyValue","setKeyValue","name","rows","cols","value","onClick","e","target","KeyboardComponents","QuizRow1","questionAmount","setQuestionAmount","inputs","document","getElementsByTagName","anwsers","characters","anwsersShuffled","charactersShuffled","x","randomNumber","Math","floor","random","length","push","inputRef","useRef","useEffect","current","focus","onChange","map","character","index","type","ref","p","y","style","backgroundColor","window","location","reload","QuizRow2","QuizRow3","QuizRow4","QuizRow5","QuizRow6","QuizRow7","QuizRow8","QuizRow9","QuizRow10","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d0fd04da.chunk.js","sourcesContent":["const Header = function(){\n    return(\n        <header>\n            <h1>Learn Japanese Desu</h1>\n        </header>\n    )\n}\n\nexport default Header;","import {Link} from \"react-router-dom\";\n\nconst Nav = function(){\n    return(\n        <nav>\n            <ul>\n                <li>\n                    <Link to=\"/\">Practice</Link>\n                </li>\n                <li>\n                    <Link to=\"/Charts\">Charts</Link>\n                </li>\n                <li>\n                    <Link to=\"/Keyboard\">Keyboard</Link>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default Nav;","import { Link } from \"react-router-dom\";\n\nconst QuizTestComponent = function () {\n  return (\n    <div className=\"QuizTestContainer\">\n      <div className=\"QuizTest\">\n        <div>\n          <Link to=\"/QuizRow1\"><p>あいうえお</p></Link>\n          <Link to=\"/QuizRow2\"><p>かきくけこ</p></Link>\n          <Link to=\"/QuizRow3\"><p>さしすせそ</p></Link>\n          <Link to=\"/QuizRow4\"><p>たちつてと</p></Link>\n          <Link to=\"/QuizRow5\"><p>なにぬねの</p></Link>\n        </div>\n        <div>\n          <Link to=\"/QuizRow6\"><p>はひふへほ</p></Link>\n          <Link to=\"/QuizRow7\"><p>まみむめも</p></Link>\n          <Link to=\"/QuizRow8\"><p>やゆよ</p></Link>\n          <Link to=\"/QuizRow9\"><p>らりるれろ</p></Link>\n          <Link to=\"/QuizRow10\"><p>わをん</p></Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default QuizTestComponent;","import QuizTestComponent from \"./QuizTestComponent\";\n\nconst PracticeComponents = function(){\n    return(\n        <div className=\"PracticeContainer\">\n            <h2>Click On A Row To Practice</h2>\n            <QuizTestComponent></QuizTestComponent>\n        </div>\n    )\n}\n\nexport default PracticeComponents;","const HiraganaChart = function(){\n    return(\n        <div className=\"Chart\">\n            <div className=\"HiraganaChartColumn\">\n                <li>ん - n</li>\n            </div>\n            <div className=\"HiraganaChartColumn\">\n                <li>わ - wa</li>\n                <li>を - wo</li>\n            </div>\n            <div className=\"HiraganaChartColumn\">\n                <li>ら - ra</li>\n                <li>り - ri</li>\n                <li>る - ru</li>\n                <li>れ - re</li>\n                <li>ろ - ro</li>\n            </div>\n            <div className=\"HiraganaChartColumn\">\n                <li>や - ya</li>\n                <li>ゆ - yu</li>\n                <li>よ - yo</li>\n            </div>\n            <div className=\"HiraganaChartColumn\">\n                <li>ま - ma</li>\n                <li>み - mi</li>\n                <li>む - mu</li>\n                <li>め - me</li>\n                <li>も - mo</li>\n            </div>\n            <div className=\"HiraganaChartColumn\">\n                <li>は - ha</li>\n                <li>ひ - hi</li>\n                <li>ふ - fu</li>\n                <li>へ - he</li>\n                <li>ほ - ho</li>\n            </div>\n            <div className=\"HiraganaChartColumn\">\n                <li>な - na</li>\n                <li>に - ni</li>\n                <li>ぬ - nu</li>\n                <li>ね - ne</li>\n                <li>の - no</li>\n            </div>\n            <div className=\"HiraganaChartColumn\">\n                <li>た - ta</li>\n                <li>ち - chi</li>\n                <li>つ - tsu</li>\n                <li>て - te</li>\n                <li>と - to</li>\n            </div>\n            <div className=\"HiraganaChartColumn\">\n                <li>さ - sa</li>\n                <li>し - shi</li>\n                <li>す - su</li>\n                <li>せ - se</li>\n                <li>そ - so</li>\n            </div>\n            <div className=\"HiraganaChartColumn\">\n                <li>か - ka</li>\n                <li>き - ki</li>\n                <li>く - ku</li>\n                <li>け - ke</li>\n                <li>こ - ko</li>\n            </div>\n            <div className=\"HiraganaChartColumn\">\n                <li>あ - a</li>\n                <li>い - i</li>\n                <li>う - u</li>\n                <li>え - e</li>\n                <li>お - o</li>\n            </div>\n        </div>\n    )\n}\n\nexport default HiraganaChart;","const KatakanaChart = function(){\n    return(\n        <div className=\"Chart\">\n            <div className=\"KatakanaChartColumn\">\n                <li>ン - n</li>\n            </div>\n            <div className=\"KatakanaChartColumn\">\n                <li>ワ - wa</li>\n                <li>ヲ - wo</li>\n            </div>\n            <div className=\"KatakanaChartColumn\">\n                <li>ラ - ra</li>\n                <li>リ - ri</li>\n                <li>ル - ru</li>\n                <li>レ - re</li>\n                <li>ロ - ro</li>\n            </div>\n            <div className=\"KatakanaChartColumn\">\n                <li>ヤ - ya</li>\n                <li>ユ - yu</li>\n                <li>ヨ - yo</li>\n            </div>\n            <div className=\"KatakanaChartColumn\">\n                <li>マ - ma</li>\n                <li>ミ - mi</li>\n                <li>ム - mu</li>\n                <li>メ - me</li>\n                <li>モ - mo</li>\n            </div>\n            <div className=\"KatakanaChartColumn\">\n                <li>ハ - ha</li>\n                <li>ヒ - hi</li>\n                <li>フ - fu</li>\n                <li>ヘ - he</li>\n                <li>ホ - ho</li>\n            </div>\n            <div className=\"KatakanaChartColumn\">\n                <li>ナ - na</li>\n                <li>ニ - ni</li>\n                <li>ヌ - nu</li>\n                <li>ネ - ne</li>\n                <li>ノ - no</li>\n            </div>\n            <div className=\"KatakanaChartColumn\">\n                <li>タ - ta</li>\n                <li>チ - chi</li>\n                <li>ツ - tsu</li>\n                <li>テ - te</li>\n                <li>ト - to</li>\n            </div>\n            <div className=\"KatakanaChartColumn\">\n                <li>サ - sa</li>\n                <li>シ - shi</li>\n                <li>ス - su</li>\n                <li>セ - se</li>\n                <li>ソ - so</li>\n            </div>\n            <div className=\"KatakanaChartColumn\">\n                <li>カ - ka</li>\n                <li>キ - ki</li>\n                <li>ク - ku</li>\n                <li>ケ - ke</li>\n                <li>コ - ko</li>\n            </div>\n            <div className=\"KatakanaChartColumn\">\n                <li>ア - a</li>\n                <li>イ - i</li>\n                <li>ウ - u</li>\n                <li>エ - e</li>\n                <li>オ - o</li>\n            </div>\n        </div>\n    )\n}\n\nexport default KatakanaChart;","import HiraganaChart from \"./HiraganaChart\"\nimport KatakanaChart from \"./KatakanaChart\";\n\nconst ChartsComponents = function(){\n    return(\n        <div className=\"ChartsContainer\">\n            <h2 className=\"ChartHeader1\">Hiragana</h2>\n            <HiraganaChart></HiraganaChart>\n            <h2 className=\"ChartHeader2\">Katakana</h2>\n            <KatakanaChart></KatakanaChart>\n        </div>\n    )\n}\n\nexport default ChartsComponents;","import {useState} from \"react\";\n\nconst HiraganaKeyboard = function () {\n\n    const[keyValue, setKeyValue] = useState(\"\");\n\n    return (\n        <div className=\"HiraganaKeyboard\">\n            <textarea className=\"KeyboardOutput\" name=\"KeyboardOutput\" rows=\"8\" cols=\"110\" value={keyValue}></textarea>\n            {/* <span>{keyValue}</span> */}\n\n            <div className=\"KeyContainer\">\n                <table>\n                    <tbody>\n                    <tr>\n                        <td><button value=\"ん\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>ん - n</button></td>\n                        <td><button value=\"わ\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>わ - wa</button></td>\n                        <td><button value=\"ら\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>ら - ra</button></td>\n                        <td><button value=\"や\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>や - ya</button></td>\n                        <td><button value=\"ま\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>ま - ma</button></td>\n                        <td><button value=\"は\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>は - ha</button></td>\n                        <td><button value=\"な\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>な - na</button></td>\n                        <td><button value=\"た\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>た - ta</button></td>\n                        <td><button value=\"さ\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>さ - sa</button></td>\n                        <td><button value=\"か\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>か - ka</button></td>\n                        <td><button value=\"あ\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>あ - a</button></td>\n                    </tr>\n                    <tr>\n                        <td></td>\n                        <td><button value=\"を\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>を - wo</button></td>\n                        <td><button value=\"り\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>り - ri</button></td>\n                        <td><button value=\"ゆ\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>ゆ - yu</button></td>\n                        <td><button value=\"み\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>み - mi</button></td>\n                        <td><button value=\"ひ\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>ひ - hi</button></td>\n                        <td><button value=\"に\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>に - ni</button></td>\n                        <td><button value=\"ち\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>ち - chi</button></td>\n                        <td><button value=\"し\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>し - shi</button></td>\n                        <td><button value=\"き\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>き - ki</button></td>\n                        <td><button value=\"い\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>い - i</button></td>\n                    </tr>\n                    <tr>\n                        <td></td>\n                        <td></td>\n                        <td><button value=\"る\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>る - ru</button></td>\n                        <td><button value=\"よ\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>よ - yo</button></td>\n                        <td><button value=\"む\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>む - mu</button></td>\n                        <td><button value=\"ふ\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>ふ - fu</button></td>\n                        <td><button value=\"ぬ\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>ぬ - nu</button></td>\n                        <td><button value=\"つ\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>つ - tsu</button></td>\n                        <td><button value=\"す\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>す - su</button></td>\n                        <td><button value=\"く\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>く - ku</button></td>\n                        <td><button value=\"う\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>う - u</button></td>\n                    </tr>\n                    <tr>\n                        <td></td>\n                        <td></td>\n                        <td><button value=\"れ\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>れ - re</button></td>\n                        <td></td>\n                        <td><button value=\"め\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>め - me</button></td>\n                        <td><button value=\"へ\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>へ - he</button></td>\n                        <td><button value=\"ね\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>ね - ne</button></td>\n                        <td><button value=\"て\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>て - te</button></td>\n                        <td><button value=\"せ\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>せ - se</button></td>\n                        <td><button value=\"け\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>け - ke</button></td>\n                        <td><button value=\"え\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>え - e</button></td>\n                    </tr>\n                    <tr>\n                        <td></td>\n                        <td></td>\n                        <td><button value=\"ろ\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>ろ - ro</button></td>\n                        <td></td>\n                        <td><button value=\"も\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>も - mo</button></td>\n                        <td><button value=\"ほ\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>ほ - ho</button></td>\n                        <td><button value=\"の\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>の - no</button></td>\n                        <td><button value=\"と\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>と - to</button></td>\n                        <td><button value=\"そ\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>そ - so</button></td>\n                        <td><button value=\"こ\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>こ - ko</button></td>\n                        <td><button value=\"お\" onClick={(e) => setKeyValue(e.target.value + keyValue)}>お - o</button></td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default HiraganaKeyboard;","import HiraganaKeyboard from \"./HiraganaKeyboard\";\n\nconst KeyboardComponents = function(){\n    return(\n        <div className=\"KeyboardContainer\">\n            <HiraganaKeyboard></HiraganaKeyboard>\n        </div>\n    )\n}\n\nexport default KeyboardComponents;","import { useState, useRef, useEffect } from \"react\";\n\nconst QuizRow1 = function () {\n    const [questionAmount, setQuestionAmount] = useState(10);\n\n    let inputs = document.getElementsByTagName(\"input\");\n    let anwsers = [\"a\", \"i\", \"u\", \"e\", \"o\"];\n    let characters = [\"あ\", \"い\", \"う\", \"え\", \"お\"];\n    let anwsersShuffled = [];\n    let charactersShuffled = [];\n\n    for (let x = 0; x < questionAmount; x++) {\n        let randomNumber = Math.floor(Math.random() * characters.length);\n        anwsersShuffled.push(anwsers[randomNumber]);\n        charactersShuffled.push(characters[randomNumber]);\n    }\n\n    const SubmitHandler = function () {\n        let p = document.getElementsByTagName(\"p\");\n\n        for (let y = 0; y < inputs.length; y++) {\n            p[y].value = anwsersShuffled[y];\n            if (p[y].value === inputs[y].value) {\n                inputs[y].style.backgroundColor = \"#28a745\";\n            } else {\n                inputs[y].style.backgroundColor = \"#dc3545\";\n            }\n        }\n    }\n\n    const ReloadHandler = function () {\n        window.location.reload();\n    }\n\n    let inputRef = useRef();\n    useEffect(function () {\n        inputRef.current.focus();\n    })\n\n    return (\n        <div className=\"QuizRowContainer\">\n            <>\n                <p>Change Amount Of Questions:\n                    <select onChange={(e) => setQuestionAmount(e.target.value)}>\n                        <option value={5}>5</option>\n                        <option value={10}>10</option>\n                        <option value={15}>15</option>\n                        <option value={20}>20</option>\n                    </select>\n                </p>\n            </>\n            <div className=\"QuestionContainer\">\n                {\n                    charactersShuffled.map(function (character, index) {\n                        return (\n                            <div className=\"Card\">\n                                <p className=\"Character\">{character}</p>\n                                <input type=\"text\" className=\"CharacterInput\" ref={index === 0 ? inputRef : null}></input>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <div className=\"ButtonContainer\">\n                <button onClick={SubmitHandler} className=\"Button1\">Submit</button>\n                <button onClick={ReloadHandler} className=\"Button2\">Reload</button>\n            </div>\n        </div>\n    )\n}\n\nexport default QuizRow1;","import { useState, useRef, useEffect } from \"react\";\n\nconst QuizRow2 = function () {\n    const [questionAmount, setQuestionAmount] = useState(10);\n\n    let inputs = document.getElementsByTagName(\"input\");\n    let anwsers = [\"ka\", \"ki\", \"ku\", \"ke\", \"ko\"];\n    let characters = [\"か\", \"き\", \"く\", \"け\", \"こ\"];\n    let anwsersShuffled = [];\n    let charactersShuffled = [];\n\n    for (let x = 0; x < questionAmount; x++) {\n        let randomNumber = Math.floor(Math.random() * characters.length);\n        anwsersShuffled.push(anwsers[randomNumber]);\n        charactersShuffled.push(characters[randomNumber]);\n    }\n\n    const SubmitHandler = function () {\n        let p = document.getElementsByTagName(\"p\");\n\n        for (let y = 0; y < inputs.length; y++) {\n            p[y].value = anwsersShuffled[y];\n            if (p[y].value === inputs[y].value) {\n                inputs[y].style.backgroundColor = \"#28a745\";\n            } else {\n                inputs[y].style.backgroundColor = \"#dc3545\";\n            }\n        }\n    }\n\n    const ReloadHandler = function () {\n        window.location.reload();\n    }\n\n    let inputRef = useRef();\n    useEffect(function () {\n        inputRef.current.focus();\n    })\n\n    return (\n        <div className=\"QuizRowContainer\">\n            <>\n                <p>Change Amount Of Questions:\n                    <select onChange={(e) => setQuestionAmount(e.target.value)}>\n                        <option value={5}>5</option>\n                        <option value={10}>10</option>\n                        <option value={15}>15</option>\n                        <option value={20}>20</option>\n                    </select>\n                </p>\n            </>\n            <div className=\"QuestionContainer\">\n                {\n                    charactersShuffled.map(function (character, index) {\n                        return (\n                            <div className=\"Card\">\n                                <p className=\"Character\">{character}</p>\n                                <input type=\"text\" className=\"CharacterInput\" ref={index === 0 ? inputRef : null}></input>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <div className=\"ButtonContainer\">\n                <button onClick={SubmitHandler} className=\"Button1\">Submit</button>\n                <button onClick={ReloadHandler} className=\"Button2\">Reload</button>\n            </div>\n        </div>\n    )\n}\n\nexport default QuizRow2;","import { useState, useRef, useEffect } from \"react\";\n\nconst QuizRow3 = function () {\n    const [questionAmount, setQuestionAmount] = useState(10);\n\n    let inputs = document.getElementsByTagName(\"input\");\n    let anwsers = [\"sa\", \"shi\", \"su\", \"se\", \"so\"];\n    let characters = [\"さ\", \"し\", \"す\", \"せ\", \"そ\"];\n    let anwsersShuffled = [];\n    let charactersShuffled = [];\n\n    for (let x = 0; x < questionAmount; x++) {\n        let randomNumber = Math.floor(Math.random() * characters.length);\n        anwsersShuffled.push(anwsers[randomNumber]);\n        charactersShuffled.push(characters[randomNumber]);\n    }\n\n    const SubmitHandler = function () {\n        let p = document.getElementsByTagName(\"p\");\n\n        for (let y = 0; y < inputs.length; y++) {\n            p[y].value = anwsersShuffled[y];\n            if (p[y].value === inputs[y].value) {\n                inputs[y].style.backgroundColor = \"#28a745\";\n            } else {\n                inputs[y].style.backgroundColor = \"#dc3545\";\n            }\n        }\n    }\n\n    const ReloadHandler = function () {\n        window.location.reload();\n    }\n\n    let inputRef = useRef();\n    useEffect(function () {\n        inputRef.current.focus();\n    },[])\n\n    return (\n        <div className=\"QuizRowContainer\">\n            <>\n                <p>Change Amount Of Questions:\n                    <select onChange={(e) => setQuestionAmount(e.target.value)}>\n                        <option value={5}>5</option>\n                        <option value={10}>10</option>\n                        <option value={15}>15</option>\n                        <option value={20}>20</option>\n                    </select>\n                </p>\n            </>\n            <div className=\"QuestionContainer\">\n                {\n                    charactersShuffled.map(function (character, index) {\n                        return (\n                            <div className=\"Card\">\n                                <p className=\"Character\">{character}</p>\n                                <input type=\"text\" className=\"CharacterInput\" ref={index === 0 ? inputRef : null}></input>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <div className=\"ButtonContainer\">\n                <button onClick={SubmitHandler} className=\"Button1\">Submit</button>\n                <button onClick={ReloadHandler} className=\"Button2\">Reload</button>\n            </div>\n        </div>\n    )\n}\n\nexport default QuizRow3;","import { useState, useRef, useEffect } from \"react\";\n\nconst QuizRow4 = function () {\n    const [questionAmount, setQuestionAmount] = useState(10);\n\n    let inputs = document.getElementsByTagName(\"input\");\n    let anwsers = [\"ta\", \"chi\", \"tsu\", \"te\", \"to\"];\n    let characters = [\"た\", \"ち\", \"つ\", \"て\", \"と\"];\n    let anwsersShuffled = [];\n    let charactersShuffled = [];\n\n    for (let x = 0; x < questionAmount; x++) {\n        let randomNumber = Math.floor(Math.random() * characters.length);\n        anwsersShuffled.push(anwsers[randomNumber]);\n        charactersShuffled.push(characters[randomNumber]);\n    }\n\n    const SubmitHandler = function () {\n        let p = document.getElementsByTagName(\"p\");\n\n        for (let y = 0; y < inputs.length; y++) {\n            p[y].value = anwsersShuffled[y];\n            if (p[y].value === inputs[y].value) {\n                inputs[y].style.backgroundColor = \"#28a745\";\n            } else {\n                inputs[y].style.backgroundColor = \"#dc3545\";\n            }\n        }\n    }\n\n    const ReloadHandler = function () {\n        window.location.reload();\n    }\n\n    let inputRef = useRef();\n    useEffect(function () {\n        inputRef.current.focus();\n    },[])\n\n    return (\n        <div className=\"QuizRowContainer\">\n            <>\n                <p>Change Amount Of Questions:\n                    <select onChange={(e) => setQuestionAmount(e.target.value)}>\n                        <option value={5}>5</option>\n                        <option value={10}>10</option>\n                        <option value={15}>15</option>\n                        <option value={20}>20</option>\n                    </select>\n                </p>\n            </>\n            <div className=\"QuestionContainer\">\n                {\n                    charactersShuffled.map(function (character, index) {\n                        return (\n                            <div className=\"Card\">\n                                <p className=\"Character\">{character}</p>\n                                <input type=\"text\" className=\"CharacterInput\" ref={index === 0 ? inputRef : null}></input>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <div className=\"ButtonContainer\">\n                <button onClick={SubmitHandler} className=\"Button1\">Submit</button>\n                <button onClick={ReloadHandler} className=\"Button2\">Reload</button>\n            </div>\n        </div>\n    )\n}\n\nexport default QuizRow4;","import { useState, useRef, useEffect } from \"react\";\n\nconst QuizRow5 = function () {\n    const [questionAmount, setQuestionAmount] = useState(10);\n\n    let inputs = document.getElementsByTagName(\"input\");\n    let anwsers = [\"na\", \"ni\", \"nu\", \"ne\", \"no\"];\n    let characters = [\"な\", \"に\", \"ぬ\", \"ね\", \"の\"];\n    let anwsersShuffled = [];\n    let charactersShuffled = [];\n\n    for (let x = 0; x < questionAmount; x++) {\n        let randomNumber = Math.floor(Math.random() * characters.length);\n        anwsersShuffled.push(anwsers[randomNumber]);\n        charactersShuffled.push(characters[randomNumber]);\n    }\n\n    const SubmitHandler = function () {\n        let p = document.getElementsByTagName(\"p\");\n\n        for (let y = 0; y < inputs.length; y++) {\n            p[y].value = anwsersShuffled[y];\n            if (p[y].value === inputs[y].value) {\n                inputs[y].style.backgroundColor = \"#28a745\";\n            } else {\n                inputs[y].style.backgroundColor = \"#dc3545\";\n            }\n        }\n    }\n\n    const ReloadHandler = function () {\n        window.location.reload();\n    }\n\n    let inputRef = useRef();\n    useEffect(function () {\n        inputRef.current.focus();\n    },[])\n\n    return (\n        <div className=\"QuizRowContainer\">\n            <>\n                <p>Change Amount Of Questions:\n                    <select onChange={(e) => setQuestionAmount(e.target.value)}>\n                        <option value={5}>5</option>\n                        <option value={10}>10</option>\n                        <option value={15}>15</option>\n                        <option value={20}>20</option>\n                    </select>\n                </p>\n            </>\n            <div className=\"QuestionContainer\">\n                {\n                    charactersShuffled.map(function (character, index) {\n                        return (\n                            <div className=\"Card\">\n                                <p className=\"Character\">{character}</p>\n                                <input type=\"text\" className=\"CharacterInput\" ref={index === 0 ? inputRef : null}></input>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <div className=\"ButtonContainer\">\n                <button onClick={SubmitHandler} className=\"Button1\">Submit</button>\n                <button onClick={ReloadHandler} className=\"Button2\">Reload</button>\n            </div>\n        </div>\n    )\n}\n\nexport default QuizRow5;","import { useState, useRef, useEffect } from \"react\";\n\nconst QuizRow6 = function () {\n    const [questionAmount, setQuestionAmount] = useState(10);\n\n    let inputs = document.getElementsByTagName(\"input\");\n    let anwsers = [\"ha\", \"hi\", \"fu\", \"he\", \"ho\"];\n    let characters = [\"は\", \"ひ\", \"ふ\", \"へ\", \"ほ\"];\n    let anwsersShuffled = [];\n    let charactersShuffled = [];\n\n    for (let x = 0; x < questionAmount; x++) {\n        let randomNumber = Math.floor(Math.random() * characters.length);\n        anwsersShuffled.push(anwsers[randomNumber]);\n        charactersShuffled.push(characters[randomNumber]);\n    }\n\n    const SubmitHandler = function () {\n        let p = document.getElementsByTagName(\"p\");\n\n        for (let y = 0; y < inputs.length; y++) {\n            p[y].value = anwsersShuffled[y];\n            if (p[y].value === inputs[y].value) {\n                inputs[y].style.backgroundColor = \"#28a745\";\n            } else {\n                inputs[y].style.backgroundColor = \"#dc3545\";\n            }\n        }\n    }\n\n    const ReloadHandler = function () {\n        window.location.reload();\n    }\n\n    let inputRef = useRef();\n    useEffect(function () {\n        inputRef.current.focus();\n    },[])\n\n    return (\n        <div className=\"QuizRowContainer\">\n            <>\n                <p>Change Amount Of Questions:\n                    <select onChange={(e) => setQuestionAmount(e.target.value)}>\n                        <option value={5}>5</option>\n                        <option value={10}>10</option>\n                        <option value={15}>15</option>\n                        <option value={20}>20</option>\n                    </select>\n                </p>\n            </>\n            <div className=\"QuestionContainer\">\n                {\n                    charactersShuffled.map(function (character, index) {\n                        return (\n                            <div className=\"Card\">\n                                <p className=\"Character\">{character}</p>\n                                <input type=\"text\" className=\"CharacterInput\" ref={index === 0 ? inputRef : null}></input>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <div className=\"ButtonContainer\">\n                <button onClick={SubmitHandler} className=\"Button1\">Submit</button>\n                <button onClick={ReloadHandler} className=\"Button2\">Reload</button>\n            </div>\n        </div>\n    )\n}\n\nexport default QuizRow6;","import { useState, useRef, useEffect } from \"react\";\n\nconst QuizRow7 = function () {\n    const [questionAmount, setQuestionAmount] = useState(10);\n\n    let inputs = document.getElementsByTagName(\"input\");\n    let anwsers = [\"ma\", \"mi\", \"mu\", \"me\", \"mo\"];\n    let characters = [\"ま\", \"み\", \"む\", \"め\", \"も\"];\n    let anwsersShuffled = [];\n    let charactersShuffled = [];\n\n    for (let x = 0; x < questionAmount; x++) {\n        let randomNumber = Math.floor(Math.random() * characters.length);\n        anwsersShuffled.push(anwsers[randomNumber]);\n        charactersShuffled.push(characters[randomNumber]);\n    }\n\n    const SubmitHandler = function () {\n        let p = document.getElementsByTagName(\"p\");\n\n        for (let y = 0; y < inputs.length; y++) {\n            p[y].value = anwsersShuffled[y];\n            if (p[y].value === inputs[y].value) {\n                inputs[y].style.backgroundColor = \"#28a745\";\n            } else {\n                inputs[y].style.backgroundColor = \"#dc3545\";\n            }\n        }\n    }\n\n    const ReloadHandler = function () {\n        window.location.reload();\n    }\n\n    let inputRef = useRef();\n    useEffect(function () {\n        inputRef.current.focus();\n    },[])\n\n    return (\n        <div className=\"QuizRowContainer\">\n            <>\n                <p>Change Amount Of Questions:\n                    <select onChange={(e) => setQuestionAmount(e.target.value)}>\n                        <option value={5}>5</option>\n                        <option value={10}>10</option>\n                        <option value={15}>15</option>\n                        <option value={20}>20</option>\n                    </select>\n                </p>\n            </>\n            <div className=\"QuestionContainer\">\n                {\n                    charactersShuffled.map(function (character, index) {\n                        return (\n                            <div className=\"Card\">\n                                <p className=\"Character\">{character}</p>\n                                <input type=\"text\" className=\"CharacterInput\" ref={index === 0 ? inputRef : null}></input>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <div className=\"ButtonContainer\">\n                <button onClick={SubmitHandler} className=\"Button1\">Submit</button>\n                <button onClick={ReloadHandler} className=\"Button2\">Reload</button>\n            </div>\n        </div>\n    )\n}\n\nexport default QuizRow7;","import { useState, useRef, useEffect } from \"react\";\n\nconst QuizRow8 = function () {\n    const [questionAmount, setQuestionAmount] = useState(10);\n\n    let inputs = document.getElementsByTagName(\"input\");\n    let anwsers = [\"ya\", \"yu\", \"yo\"];\n    let characters = [\"や\", \"ゆ\", \"よ\"];\n    let anwsersShuffled = [];\n    let charactersShuffled = [];\n\n    for (let x = 0; x < questionAmount; x++) {\n        let randomNumber = Math.floor(Math.random() * characters.length);\n        anwsersShuffled.push(anwsers[randomNumber]);\n        charactersShuffled.push(characters[randomNumber]);\n    }\n\n    const SubmitHandler = function () {\n        let p = document.getElementsByTagName(\"p\");\n\n        for (let y = 0; y < inputs.length; y++) {\n            p[y].value = anwsersShuffled[y];\n            if (p[y].value === inputs[y].value) {\n                inputs[y].style.backgroundColor = \"#28a745\";\n            } else {\n                inputs[y].style.backgroundColor = \"#dc3545\";\n            }\n        }\n    }\n\n    const ReloadHandler = function () {\n        window.location.reload();\n    }\n\n    let inputRef = useRef();\n    useEffect(function () {\n        inputRef.current.focus();\n    },[])\n\n    return (\n        <div className=\"QuizRowContainer\">\n            <>\n                <p>Change Amount Of Questions:\n                    <select onChange={(e) => setQuestionAmount(e.target.value)}>\n                        <option value={5}>5</option>\n                        <option value={10}>10</option>\n                        <option value={15}>15</option>\n                        <option value={20}>20</option>\n                    </select>\n                </p>\n            </>\n            <div className=\"QuestionContainer\">\n                {\n                    charactersShuffled.map(function (character, index) {\n                        return (\n                            <div className=\"Card\">\n                                <p className=\"Character\">{character}</p>\n                                <input type=\"text\" className=\"CharacterInput\" ref={index === 0 ? inputRef : null}></input>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <div className=\"ButtonContainer\">\n                <button onClick={SubmitHandler} className=\"Button1\">Submit</button>\n                <button onClick={ReloadHandler} className=\"Button2\">Reload</button>\n            </div>\n        </div>\n    )\n}\n\nexport default QuizRow8;","import { useState, useRef, useEffect } from \"react\";\n\nconst QuizRow9 = function () {\n    const [questionAmount, setQuestionAmount] = useState(10);\n\n    let inputs = document.getElementsByTagName(\"input\");\n    let anwsers = [\"ra\", \"ri\", \"ru\", \"re\", \"ro\"];\n    let characters = [\"ら\", \"り\", \"る\", \"れ\", \"ろ\"];\n    let anwsersShuffled = [];\n    let charactersShuffled = [];\n\n    for (let x = 0; x < questionAmount; x++) {\n        let randomNumber = Math.floor(Math.random() * characters.length);\n        anwsersShuffled.push(anwsers[randomNumber]);\n        charactersShuffled.push(characters[randomNumber]);\n    }\n\n    const SubmitHandler = function () {\n        let p = document.getElementsByTagName(\"p\");\n\n        for (let y = 0; y < inputs.length; y++) {\n            p[y].value = anwsersShuffled[y];\n            if (p[y].value === inputs[y].value) {\n                inputs[y].style.backgroundColor = \"#28a745\";\n            } else {\n                inputs[y].style.backgroundColor = \"#dc3545\";\n            }\n        }\n    }\n\n    const ReloadHandler = function () {\n        window.location.reload();\n    }\n\n    let inputRef = useRef();\n    useEffect(function () {\n        inputRef.current.focus();\n    },[])\n\n    return (\n        <div className=\"QuizRowContainer\">\n            <>\n                <p>Change Amount Of Questions:\n                    <select onChange={(e) => setQuestionAmount(e.target.value)}>\n                        <option value={5}>5</option>\n                        <option value={10}>10</option>\n                        <option value={15}>15</option>\n                        <option value={20}>20</option>\n                    </select>\n                </p>\n            </>\n            <div className=\"QuestionContainer\">\n                {\n                    charactersShuffled.map(function (character, index) {\n                        return (\n                            <div className=\"Card\">\n                                <p className=\"Character\">{character}</p>\n                                <input type=\"text\" className=\"CharacterInput\" ref={index === 0 ? inputRef : null}></input>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <div className=\"ButtonContainer\">\n                <button onClick={SubmitHandler} className=\"Button1\">Submit</button>\n                <button onClick={ReloadHandler} className=\"Button2\">Reload</button>\n            </div>\n        </div>\n    )\n}\n\nexport default QuizRow9;","import { useState, useRef, useEffect } from \"react\";\n\nconst QuizRow10 = function () {\n    const [questionAmount, setQuestionAmount] = useState(10);\n\n    let inputs = document.getElementsByTagName(\"input\");\n    let anwsers = [\"wa\", \"wo\", \"n\"];\n    let characters = [\"わ\", \"を\", \"ん\"];\n    let anwsersShuffled = [];\n    let charactersShuffled = [];\n\n    for (let x = 0; x < questionAmount; x++) {\n        let randomNumber = Math.floor(Math.random() * characters.length);\n        anwsersShuffled.push(anwsers[randomNumber]);\n        charactersShuffled.push(characters[randomNumber]);\n    }\n\n    const SubmitHandler = function () {\n        let p = document.getElementsByTagName(\"p\");\n\n        for (let y = 0; y < inputs.length; y++) {\n            p[y].value = anwsersShuffled[y];\n            if (p[y].value === inputs[y].value) {\n                inputs[y].style.backgroundColor = \"#28a745\";\n            } else {\n                inputs[y].style.backgroundColor = \"#dc3545\";\n            }\n        }\n    }\n\n    const ReloadHandler = function () {\n        window.location.reload();\n    }\n\n    let inputRef = useRef();\n    useEffect(function () {\n        inputRef.current.focus();\n    },[])\n\n    return (\n        <div className=\"QuizRowContainer\">\n            <>\n                <p>Change Amount Of Questions:\n                    <select onChange={(e) => setQuestionAmount(e.target.value)}>\n                        <option value={5}>5</option>\n                        <option value={10}>10</option>\n                        <option value={15}>15</option>\n                        <option value={20}>20</option>\n                    </select>\n                </p>\n            </>\n            <div className=\"QuestionContainer\">\n                {\n                    charactersShuffled.map(function (character, index) {\n                        return (\n                            <div className=\"Card\">\n                                <p className=\"Character\">{character}</p>\n                                <input type=\"text\" className=\"CharacterInput\" ref={index === 0 ? inputRef : null}></input>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            <div className=\"ButtonContainer\">\n                <button onClick={SubmitHandler} className=\"Button1\">Submit</button>\n                <button onClick={ReloadHandler} className=\"Button2\">Reload</button>\n            </div>\n        </div>\n    )\n}\n\nexport default QuizRow10;","import {BrowserRouter, Route} from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Nav from \"./components/Nav\";\nimport PracticeComponents from \"./components/practice/PracticeComponents\";\nimport ChartsComponents from \"./components/charts/ChartComponents\";\nimport KeyboardComponents from \"./components/keyboard/KeyboardComponents\";\nimport QuizRow1 from \"./components/practice/QuizRowsHiragana/QuizRow1\";\nimport QuizRow2 from \"./components/practice/QuizRowsHiragana/QuizRow2\";\nimport QuizRow3 from \"./components/practice/QuizRowsHiragana/QuizRow3\";\nimport QuizRow4 from \"./components/practice/QuizRowsHiragana/QuizRow4\";\nimport QuizRow5 from \"./components/practice/QuizRowsHiragana/QuizRow5\";\nimport QuizRow6 from \"./components/practice/QuizRowsHiragana/QuizRow6\";\nimport QuizRow7 from \"./components/practice/QuizRowsHiragana/QuizRow7\";\nimport QuizRow8 from \"./components/practice/QuizRowsHiragana/QuizRow8\";\nimport QuizRow9 from \"./components/practice/QuizRowsHiragana/QuizRow9\";\nimport QuizRow10 from \"./components/practice/QuizRowsHiragana/QuizRow10\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"Container\">\n        <BrowserRouter>\n        <Header></Header>\n        <Nav></Nav>\n        <Route path=\"/\" component={PracticeComponents} exact></Route>\n        <Route path=\"/Charts\" component={ChartsComponents}></Route>\n        <Route path=\"/Keyboard\" component={KeyboardComponents}></Route>\n        <Route path=\"/QuizRow1\" component={QuizRow1}></Route>\n        <Route path=\"/QuizRow2\" component={QuizRow2}></Route>\n        <Route path=\"/QuizRow3\" component={QuizRow3}></Route>\n        <Route path=\"/QuizRow4\" component={QuizRow4}></Route>\n        <Route path=\"/QuizRow5\" component={QuizRow5}></Route>\n        <Route path=\"/QuizRow6\" component={QuizRow6}></Route>\n        <Route path=\"/QuizRow7\" component={QuizRow7}></Route>\n        <Route path=\"/QuizRow8\" component={QuizRow8}></Route>\n        <Route path=\"/QuizRow9\" component={QuizRow9}></Route>\n        <Route path=\"/QuizRow10\" component={QuizRow10}></Route>\n        </BrowserRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}